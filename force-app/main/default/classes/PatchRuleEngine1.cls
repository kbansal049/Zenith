/*
 * This class is generated dynamically from Patch Rules.
 */
global class PatchRuleEngine1 extends  PatchRuleEngineBase implements IPatchRuleEngine
{
  private Id matchGroup1(PatchDataModel.MatchTarget t)
  {
    if(opContain(t.custom5, 'Anuraj S'))      overlayingPatchIds.add('a304u000002nO46AAE');
    if(opContain(t.custom5, 'Scott Bristowe'))      overlayingPatchIds.add('a304u000002nQAGAA2');
    if(opContain(t.custom5, 'Suhas H K'))      overlayingPatchIds.add('a304u000002nQQRAA2');
    if(opContain(t.custom5, 'Ashwini T S'))      overlayingPatchIds.add('a304u000002nQa7AAE');
    if(opContain(t.custom5, 'Inam Shafi'))      overlayingPatchIds.add('a304u000002nQaCAAU');
    if(opContain(t.custom5, 'Sayanti Saha'))      overlayingPatchIds.add('a304u000002nQaHAAU');
    if(opContain(t.custom5, 'Irana Cordero'))      overlayingPatchIds.add('a304u000002nRqeAAE');
    if(opContain(t.custom5, 'Alexander Jimenez'))      overlayingPatchIds.add('a304u000002nTwUAAU');
    if(opContain(t.custom5, 'Brice Cognat'))      overlayingPatchIds.add('a304u000002nRqjAAE');
    if(opContain(t.custom5, 'Stephany Marchena'))      overlayingPatchIds.add('a304u000002nTwZAAU');
    if(opContain(t.custom5, 'Shalini'))      overlayingPatchIds.add('a304u000002nRqoAAE');
    if(opContain(t.custom5, 'Ricardo Bent'))      overlayingPatchIds.add('a304u000002nTwtAAE');
    if(opContain(t.custom5, 'Rahul Zaware'))      overlayingPatchIds.add('a304u000002nRqtAAE');
    if(opContain(t.custom5, 'Brian Fitton'))      overlayingPatchIds.add('a304u000002nRqyAAE');
    if(opContain(t.custom5, 'Fetiya Oumer'))      overlayingPatchIds.add('a304u000002nRr3AAE');
    if(opContain(t.custom5, 'Przemyslaw Grabka'))      overlayingPatchIds.add('a304u000002nRrDAAU');
    if(opContain(t.custom5, 'Ryan Durham'))      overlayingPatchIds.add('a304u000002nRr8AAE');
    if(opContain(t.custom5, 'Santiago Mora'))      overlayingPatchIds.add('a304u000002nSHJAA2');
    if(opContain(t.custom5, 'Yoichi Hayakawa'))      overlayingPatchIds.add('a304u000002nWSpAAM');
    if(opContain(t.custom5, 'Praveen Kumar'))      overlayingPatchIds.add('a304u000002nUnAAAU');
    if(opContain(t.custom5, 'Domhnall Maccormac'))      overlayingPatchIds.add('a304u000002nbCVAAY');
    if(opContain(t.custom5, 'Jason Bryant'))      overlayingPatchIds.add('a304u000002nbkLAAQ');
    if(opContain(t.custom5, 'Jessica Lawrence'))      overlayingPatchIds.add('a304u000002nbkVAAQ');
    if(opContain(t.custom5, 'Brooks Carlson'))      overlayingPatchIds.add('a304u000002nbkaAAA');
    if(opContain(t.custom5, 'Siju Paulson'))      overlayingPatchIds.add('a304u000002nbl4AAA');
    if(opContain(t.custom5, 'Anshuman .'))      overlayingPatchIds.add('a304u000002nc07AAA');
    if(opContain(t.custom5, 'Dipesh Soni'))      overlayingPatchIds.add('a304u000002nc0CAAQ');
    if(opContain(t.custom5, 'Maria Guzman'))      overlayingPatchIds.add('a304u000002nih9AAA');
    if(opContain(t.custom5, 'Andres Alfaro'))      overlayingPatchIds.add('a304u000002njS6AAI');
    if(opContain(t.custom5, 'Anthony Murillo'))      overlayingPatchIds.add('a304u000002njSBAAY');
    if(opContain(t.custom5, 'Chana Atar'))      overlayingPatchIds.add('a304u000002njSGAAY');
    if(opContain(t.custom5, 'Tatiana Porras'))      overlayingPatchIds.add('a304u000002nkxbAAA');
    if(opContain(t.custom5, 'Matt Smith'))      overlayingPatchIds.add('a304u000002nkxgAAA');
    if(opContain(t.custom5, 'Roberto Hutchinson'))      overlayingPatchIds.add('a304u000002nkxlAAA');
    if(opContain(t.custom5, 'Geetika Saxena'))      overlayingPatchIds.add('a304u000002nkxqAAA');
    return null;
  }
  private Id matchGroup2(PatchDataModel.MatchTarget t)
  {
    if(opContain(t.custom5, 'Sunil Kannan'))      overlayingPatchIds.add('a304u000002nlL2AAI');
    if(opContain(t.custom5, 'Mio Asakawa'))      overlayingPatchIds.add('a304u000002nmpAAAQ');
    if(opContain(t.custom5, 'Jose Javier Diaz Alcoceba'))      overlayingPatchIds.add('a304u000002nmpFAAQ');
    if(opContain(t.custom5, 'Chetan Shete'))      overlayingPatchIds.add('a304u000002nmpeAAA');
    if(opContain(t.custom5, 'Kunal Radia'))      overlayingPatchIds.add('a304u000002nqgUAAQ');
    if(opContain(t.custom5, 'Pooja Chauhan'))      overlayingPatchIds.add('a304u000002nqgZAAQ');
    if(opContain(t.custom5, 'Kazuki Muromachi'))      overlayingPatchIds.add('a304u000002nqgoAAA');
    if(opContain(t.custom5, 'Priyanka Prashanth'))      overlayingPatchIds.add('a304u000002nsFOAAY');
    if(opContain(t.custom5, 'Hitesh Mangtani'))      overlayingPatchIds.add('a304u000002nsFTAAY');
    if(opContain(t.custom5, 'Varun Rammohan'))      overlayingPatchIds.add('a304u000002nsFYAAY');
    if(opContain(t.custom5, 'Overlay: TAM - Michal Switalski'))      overlayingPatchIds.add('a304u000002nvLaAAI');
    if(opContain(t.custom5, 'Overlay: TAM - Alberto Llor Moragues'))      overlayingPatchIds.add('a304u000002nvLfAAI');
    if(opContain(t.custom5, 'Overlay: TAM - Shingo Iwanaga'))      overlayingPatchIds.add('a304u000002nvLkAAI');
    if(opContain(t.custom5, 'Overlay: TAM - Ryota Taguchi'))      overlayingPatchIds.add('a304u000002nvLpAAI');
    if(opContain(t.custom5, 'Overlay: TAM - Kannan S'))      overlayingPatchIds.add('a304u000002ny31AAA');
    if(opContain(t.custom5, 'Overlay: TAM - Kavinkumar A'))      overlayingPatchIds.add('a304u000002ny36AAA');
    if(opContain(t.custom5, 'Gene Whitaker'))      overlayingPatchIds.add('a304u000002nyVqAAI');
    if(opContain(t.custom5, 'Jamie Sealy'))      overlayingPatchIds.add('a304u000002nyVvAAI');
    if(opContain(t.custom5, 'Tarun Kochar'))      overlayingPatchIds.add('a304u000002nzIDAAY');
    if(opContain(t.custom5, 'Somnath Jadhav'))      overlayingPatchIds.add('a304u000002o382AAA');
    if(opContain(t.custom5, 'Asmika Mohanan'))      overlayingPatchIds.add('a304u000002o38MAAQ');
    if(opContain(t.custom5, 'Gurpreet Singh'))      overlayingPatchIds.add('a304u000002o38RAAQ');
    if(opContain(t.custom5, 'Esteban Gonzalez'))      overlayingPatchIds.add('a304u000002o38lAAA');
    if(opContain(t.custom5, 'Masato Morita'))      overlayingPatchIds.add('a304u000002o3uUAAQ');
    if(opContain(t.custom5, 'Rakesh K P'))      overlayingPatchIds.add('a304u000002o3ujAAA');
    if(opContain(t.custom5, 'Vineeth Bhaskaran'))      overlayingPatchIds.add('a304u000002o3uoAAA');
    if(opContain(t.custom5, 'Rachitha Parashuram'))      overlayingPatchIds.add('a304u000002o3utAAA');
    if(opContain(t.custom5, 'Amit Singh'))      overlayingPatchIds.add('a304u000002o3uyAAA');
    if(opContain(t.custom5, 'Katsuhiko Niino'))      overlayingPatchIds.add('a304u000002o3v8AAA');
    if(opContain(t.custom5, 'Fabian Mora'))      overlayingPatchIds.add('a304u000002o3vDAAQ');
    if(opContain(t.custom5, 'Priyanka Bompilwar'))      overlayingPatchIds.add('a304u000002o4gwAAA');
    if(opContain(t.custom5, 'Vinay Nagaraj'))      overlayingPatchIds.add('a304u000002oArTAAU');
    if(opContain(t.custom5, 'Stephen Hildenbrand'))      overlayingPatchIds.add('a304u000002oEizAAE');
    if(opContain(t.custom5, 'Mark Lindenfelser'))      overlayingPatchIds.add('a304u000002oEj4AAE');
    if(opContain(t.custom5, 'Shivansh Agarwal'))      overlayingPatchIds.add('a304u000002oH2jAAE');
    return null;
  }
  private Id matchGroup3(PatchDataModel.MatchTarget t)
  {
    if(opContain(t.custom5, 'Alejandro Arceo Feria'))      overlayingPatchIds.add('a304u000002oHoXAAU');
    if(opContain(t.custom5, 'Saba Shah'))      overlayingPatchIds.add('a304u000002oJMEAA2');
    if(opContain(t.custom5, 'Mohammad Tareiq'))      overlayingPatchIds.add('a304u000002oJMJAA2');
    if(opContain(t.custom5, 'Subhajit Roy'))      overlayingPatchIds.add('a304u000002oNDLAA2');
    if(opContain(t.custom5, 'Marco Fera'))      overlayingPatchIds.add('a304u000002oNzTAAU');
    if(opContain(t.custom5, 'Monimala Bhattacharya'))      overlayingPatchIds.add('a304u000002oR4wAAE');
    if(opContain(t.custom5, 'Pooja Roy'))      overlayingPatchIds.add('a304u000002oScnAAE');
    if(opContain(t.custom5, 'Shakti Nair'))      overlayingPatchIds.add('a304u000002oVhXAAU');
    if(opContain(t.custom5, 'Simran Shaw'))      overlayingPatchIds.add('a304u000002oVhcAAE');
    if(opContain(t.custom5, 'William Mascarenhas'))      overlayingPatchIds.add('a304u000002oVhhAAE');
    if(opContain(t.custom5, 'Harleen Bali'))      overlayingPatchIds.add('a304u000002oXGHAA2');
    if(opContain(t.custom5, 'Guneet Singh'))      overlayingPatchIds.add('a304u000002ofp4AAA');
    if(opContain(t.custom5, 'Durga Prasath'))      overlayingPatchIds.add('a304u000002orYZAAY');
    if(opContain(t.custom5, 'Anil Kumar'))      overlayingPatchIds.add('a304u000002orYUAAY');
    if(opContain(t.custom5, 'Jaspreet Singh'))      overlayingPatchIds.add('a304u000002orYeAAI');
    if(opContain(t.custom5, 'Overlay: TAM - Pavan Kour'))      overlayingPatchIds.add('a304u000002p02qAAA');
    if(opContain(t.custom5, 'Vinay Nair'))      overlayingPatchIds.add('a304u000002p2OgAAI');
    if(opContain(t.custom5, 'Alejandro Vega'))      overlayingPatchIds.add('a304u000002p2OlAAI');
    if(opContain(t.custom5, 'John Sirikool'))      overlayingPatchIds.add('a304u000002p2OqAAI');
    if(opContain(t.custom5, 'Eric Abramian'))      overlayingPatchIds.add('a304u000002p2OvAAI');
    if(opContain(t.custom5, 'Carlos Guerra'))      overlayingPatchIds.add('a304u000002p4k2AAA');
    if(opContain(t.custom5, 'Martin Zwirlein'))      overlayingPatchIds.add('a304u000002p7wHAAQ');
    if(opContain(t.custom5, 'Sam Regan'))      overlayingPatchIds.add('a304u000002p9UNAAY');
    if(opContain(t.custom5, 'Manoj Kumar'))      overlayingPatchIds.add('a304u000002pDNfAAM');
    if(opContain(t.custom5, 'Ardavan Naderzad'))      overlayingPatchIds.add('a304u000002pE9nAAE');
    if(opContain(t.custom5, 'Sushesh Koul'))      overlayingPatchIds.add('a304u000002pEvlAAE');
    if(opContain(t.custom5, 'Jaspreet Kaur'))      overlayingPatchIds.add('a304u000002pEvqAAE');
    if(opContain(t.custom5, 'Kanika .'))      overlayingPatchIds.add('a304u000002pEvvAAE');
    if(opContain(t.custom5, 'Anurag Bhardwaj'))      overlayingPatchIds.add('a304u000002pEw0AAE');
    if(opContain(t.custom5, 'Montek Singh'))      overlayingPatchIds.add('a304u000002pEw5AAE');
    if(opContain(t.custom5, 'Manpreet Singh'))      overlayingPatchIds.add('a304u000002pEwAAAU');
    if(opContain(t.custom5, 'Rahul Bansal'))      overlayingPatchIds.add('a304u000002pEwFAAU');
    if(opContain(t.custom5, 'Simran Rana'))      overlayingPatchIds.add('a304u000002pEwUAAU');
    if(opContain(t.custom5, 'Anmol .'))      overlayingPatchIds.add('a304u000002pEwZAAU');
    if(opContain(t.custom5, 'Nigel Mason-Flucke'))      overlayingPatchIds.add('a304u000002pJZZAA2');
    return null;
  }
  private Id matchGroup4(PatchDataModel.MatchTarget t)
  {
    if(opContain(t.custom5, 'Parikshit Singh'))      overlayingPatchIds.add('a304u000002pJZeAAM');
    if(opContain(t.custom5, 'Sanjog Sahu'))      overlayingPatchIds.add('a304u000002pJZyAAM');
    if(opContain(t.custom5, 'Kanchan .'))      overlayingPatchIds.add('a304u000002pJa3AAE');
    if(opContain(t.custom5, 'Akash Thote'))      overlayingPatchIds.add('a304u000002pKLhAAM');
    if(opContain(t.custom5, 'Gaurav Parik'))      overlayingPatchIds.add('a304u000002pKLmAAM');
    if(opContain(t.custom5, 'Debjyoti Ghosal'))      overlayingPatchIds.add('a304u000002pMg0AAE');
    if(opContain(t.custom5, 'Hamza El Air'))      overlayingPatchIds.add('a304u000002pODrAAM');
    if(opContain(t.custom5, 'Akshith Balan'))      overlayingPatchIds.add('a304u000002pODwAAM');
    if(opContain(t.custom5, 'Sravya Sree Tanikella'))      overlayingPatchIds.add('a304u000002pS61AAE');
    if(opContain(t.custom5, 'Pallavi Gupta'))      overlayingPatchIds.add('a304u000002pS66AAE');
    if(opContain(t.custom5, 'Simrat Kaur Handa'))      overlayingPatchIds.add('a304u000002pS6BAAU');
    if(opContain(t.custom5, 'Jason Lucia'))      overlayingPatchIds.add('a304u000002pS6GAAU');
    if(opContain(t.custom5, 'Harshitha M'))      overlayingPatchIds.add('a304u000002pS6LAAU');
    if(opContain(t.custom5, 'Thrupthi B'))      overlayingPatchIds.add('a304u000002pS6QAAU');
    if(opContain(t.custom5, 'Kavana M'))      overlayingPatchIds.add('a304u000002pS6VAAU');
    if(opContain(t.custom5, 'Sai Pavan'))      overlayingPatchIds.add('a304u000002pS6aAAE');
    if(opContain(t.custom5, 'Pricila Divyanathan'))      overlayingPatchIds.add('a304u000002pSBWAA2');
    if(opContain(t.custom5, 'Mukesh Reddy'))      overlayingPatchIds.add('a304u000002pSsiAAE');
    if(opContain(t.custom5, 'Punyashree C S'))      overlayingPatchIds.add('a304u000002pSsnAAE');
    if(opContain(t.custom5, 'Bayagari Reddy'))      overlayingPatchIds.add('a304u000002pSssAAE');
    if(opContain(t.custom5, 'Haneel Chitikireddi'))      overlayingPatchIds.add('a304u000002pSsxAAE');
    if(opContain(t.custom5, 'Sonu Duhan'))      overlayingPatchIds.add('a304u000002pTfPAAU');
    if(opContain(t.custom5, 'Vaishnavi Dahake'))      overlayingPatchIds.add('a304u000002pcAAAAY');
    if(opContain(t.custom5, 'Johannes Seitle'))      overlayingPatchIds.add('a304u000002pcvyAAA');
    if(opContain(t.custom5, 'Praveen Muktevi'))      overlayingPatchIds.add('a304u000002pcw3AAA');
    if(opContain(t.custom5, 'Kavya LB'))      overlayingPatchIds.add('a304u000002pgoDAAQ');
    if(opContain(t.custom5, 'Thomas Tobler'))      overlayingPatchIds.add('a304u000002pgoIAAQ');
    if(opContain(t.custom5, 'Dusten Henderson'))      overlayingPatchIds.add('a304u000002piLzAAI');
    if(opContain(t.custom5, 'Viplove Rane'))      overlayingPatchIds.add('a304u000002pmZRAAY');
    if(opContain(t.custom5, 'Michael Kamanga'))      overlayingPatchIds.add('a304u000002eAZCAA2');
    if(opContain(t.custom5, 'Victor Vergara'))      overlayingPatchIds.add('a304u000002eAZHAA2');
    if(opContain(t.custom5, 'Aaron Bednar'))      overlayingPatchIds.add('a304u000002eKltAAE');
    if(opContain(t.custom5, 'Imron Khatib'))      overlayingPatchIds.add('a304u000002eLbjAAE');
    if(opContain(t.custom5, 'Amber Ghauri'))      overlayingPatchIds.add('a304u000002eZgBAAU');
    if(opContain(t.custom5, 'Yamini Sharma'))      overlayingPatchIds.add('a304u000002eZgGAAU');
    return null;
  }
  private Id matchGroup5(PatchDataModel.MatchTarget t)
  {
    if(opContain(t.custom5, 'Alejandro Sandi'))      overlayingPatchIds.add('a304u000002po9sAAA');
    if(opContain(t.custom5, 'Anusha Kumar'))      overlayingPatchIds.add('a304u000002i3SIAAY');
    if(opContain(t.custom5, 'Braxton Hyde'))      overlayingPatchIds.add('a304u000002i8h6AAA');
    if(opContain(t.custom5, 'Roberto Matarrita'))      overlayingPatchIds.add('a304u000002i8hBAAQ');
    if(opContain(t.custom5, 'Suman Das'))      overlayingPatchIds.add('a304u000002i9TOAAY');
    if(opContain(t.custom5, 'Justin Piszcz'))      overlayingPatchIds.add('a304u000002iBokAAE');
    if(opContain(t.custom5, 'Fazil Sarfaraz'))      overlayingPatchIds.add('a304u000002iBopAAE');
    if(opContain(t.custom5, 'Aaron Bailey'))      overlayingPatchIds.add('a304u000002iBouAAE');
    if(opContain(t.custom5, 'Devi Thiruvadi'))      overlayingPatchIds.add('a304u000002iDNUAA2');
    if(opContain(t.custom5, 'Tomokazu Kawake'))      overlayingPatchIds.add('a304u000002iDNoAAM');
    if(opContain(t.custom5, 'Sudarshan Thirumalai'))      overlayingPatchIds.add('a304u000002iDNtAAM');
    if(opContain(t.custom5, 'Milton Solano'))      overlayingPatchIds.add('a304u000002iKPnAAM');
    if(opContain(t.custom5, 'Rohit Sharma'))      overlayingPatchIds.add('a304u000002iLCAAA2');
    if(opContain(t.custom5, 'Javier Mendez'))      overlayingPatchIds.add('a304u000002iP6kAAE');
    if(opContain(t.custom5, 'Anna Dzenizhenka'))      overlayingPatchIds.add('a304u000002iTnrAAE');
    if(opContain(t.custom5, 'Joel Hillin'))      overlayingPatchIds.add('a304u000002ibe4AAA');
    if(opContain(t.custom5, 'Younis Hamdani'))      overlayingPatchIds.add('a304u000002ibeEAAQ');
    if(opContain(t.custom5, 'Irshad Siddiqui'))      overlayingPatchIds.add('a304u000002ie5CAAQ');
    if(opContain(t.custom5, 'Shivankush Chauhan'))      overlayingPatchIds.add('a304u000002ifkBAAQ');
    if(opContain(t.custom5, 'Priyank Chaturvedi'))      overlayingPatchIds.add('a304u000002ifkGAAQ');
    if(opContain(t.custom5, 'Amir Carvan'))      overlayingPatchIds.add('a304u000002ifkaAAA');
    if(opContain(t.custom5, 'Luis Crespo'))      overlayingPatchIds.add('a304u000002ifmvAAA');
    if(opContain(t.custom5, 'Manan Gandhi'))      overlayingPatchIds.add('a304u000002ifn0AAA');
    if(opContain(t.custom5, 'Jagadish S'))      overlayingPatchIds.add('a304u000002ifnKAAQ');
    if(opContain(t.custom5, 'Alexander Martell'))      overlayingPatchIds.add('a304u000002ig1lAAA');
    if(opContain(t.custom5, 'Richard Wheeler'))      overlayingPatchIds.add('a304u000002ig1qAAA');
    if(opContain(t.custom5, 'Rakesh Baskaran'))      overlayingPatchIds.add('a304u000002ig3rAAA');
    if(opContain(t.custom5, 'Gabriel Bowen'))      overlayingPatchIds.add('a304u000002igE6AAI');
    if(opContain(t.custom5, 'Marcin Boy'))      overlayingPatchIds.add('a304u000002igG2AAI');
    if(opContain(t.custom5, 'Vignesh K M'))      overlayingPatchIds.add('a304u000002igJ6AAI');
    if(opContain(t.custom5, 'Pushpinderjit Kahlon'))      overlayingPatchIds.add('a304u000002igJBAAY');
    if(opContain(t.custom5, 'Ripudaman Singh'))      overlayingPatchIds.add('a304u000002igJkAAI');
    if(opContain(t.custom5, 'Ashish Reyes'))      overlayingPatchIds.add('a304u000002igjxAAA');
    if(prematches.get('Company Name').contains('a314u00000Nxj5GAAR') || prematches.get('Email Domain').contains('a314u00000Nxj5LAAR'))      return 'a304u000002m8cUAAQ'; //Patch SI Amer Emerging
    if((prematches.get('Company Name').contains('a314u00000ORAtFAAX') && opIn(t.custom2, new Set<String> { 'partner', 'ex - partner', 'partner prospect' })) || (prematches.get('Email Domain').contains('a314u00000ORAtRAAX') && opIn(t.custom2, new Set<String> { 'partner', 'ex - partner', 'partner prospect' })))      return 'a304u000001wyP9AAI'; //Patch Channel - Distribution
    return null;
  }
  private Id matchGroup6(PatchDataModel.MatchTarget t)
  {
    if(prematches.get('Company Name').contains('a314u00000NdhzSAAR') || prematches.get('Email Domain').contains('a314u00000NdhzXAAR'))      return 'a304u000001GeLaAAK'; //Patch VAR - Guidepoint
    if((prematches.get('Company Name').contains('a310g000006Nk25AAC') && opContain(t.custom2, 'Partner')) || (prematches.get('Email Domain').contains('a310g000006Nk3FAAS') && opContain(t.custom2, 'Partner')))      return 'a300g000001IBj8AAG'; //Patch SP - DT/T-Systems - Named Accounts
    if((prematches.get('Company Name').contains('a310g000006Nk1wAAC') && opIn(t.custom2, new Set<String> { 'partner', 'ex - partner', 'partner prospect' })) || (prematches.get('Email Domain').contains('a310g000006Nk36AAC') && opIn(t.custom2, new Set<String> { 'partner', 'ex - partner', 'partner prospect' })))      return 'a300g000001IBizAAG'; //Patch GSI - Deloitte
    if(prematches.get('Company Name').contains('a314u00000Ny7P0AAJ') || prematches.get('Email Domain').contains('a314u00000Ny7P5AAJ'))      return 'a304u000002n22JAAQ'; //Patch VAR – NPM 5
    if(prematches.get('Company Name').contains('a310g00000Az5y2AAB') || prematches.get('Email Domain').contains('a310g00000Az5y7AAB'))      return 'a300g000001lkgGAAQ'; //Patch Bus Dev Cloud Consulting - Microsoft
    if((prematches.get('Company Name').contains('a314u00000NtX4lAAF') && opIn(t.custom2, new Set<String> { 'partner', 'ex - partner', 'partner prospect' })) || (prematches.get('Email Domain').contains('a314u00000NtX4qAAF') && opIn(t.custom2, new Set<String> { 'partner', 'ex - partner', 'partner prospect' })))      return 'a304u000002igC5AAI'; //Patch SP - Vodafone - Named Accounts
    if(prematches.get('Company Name').contains('a314u00000Ny5TdAAJ') || prematches.get('Email Domain').contains('a314u00000Ny5TiAAJ'))      return 'a304u000002mu9zAAA'; //Patch GSI - G7 - IBM
    if((prematches.get('Company Name').contains('a310g000007I5fSAAS') && opIn(t.custom2, new Set<String> { 'partner', 'ex - partner', 'partner prospect' })) || (prematches.get('Email Domain').contains('a310g000007I5fXAAS') && opIn(t.custom2, new Set<String> { 'partner', 'ex - partner', 'partner prospect' })))      return 'a300g000001TQnxAAG'; //Patch SP - Telefonica
    if(prematches.get('Company Name').contains('a3170000002x5E8AAI') || prematches.get('Email Domain').contains('a3170000002x5E9AAI'))      return 'a3070000000EeAlAAK'; //Patch VAR - SHI
    if((prematches.get('Company Name').contains('a3170000002x5D5AAI') && opIn(t.custom2, new Set<String> { 'partner', 'ex - partner', 'partner prospect' })) || (prematches.get('Email Domain').contains('a3170000002x5DFAAY') && opIn(t.custom2, new Set<String> { 'partner', 'ex - partner', 'partner prospect' })))      return 'a3070000000EeARAA0'; //Patch SP - OBS
    if((prematches.get('Company Name').contains('a3170000002x5DZAAY') && opIn(t.custom2, new Set<String> { 'partner', 'ex - partner', 'partner prospect' })) || (prematches.get('Email Domain').contains('a3170000002x5DaAAI') && opIn(t.custom2, new Set<String> { 'partner', 'ex - partner', 'partner prospect' })))      return 'a3070000000EeAbAAK'; //Patch SP - EMEA Emerging
    if(prematches.get('Company Name').contains('a3170000002x5GdAAI') || prematches.get('Email Domain').contains('a3170000002x5GnAAI'))      return 'a3070000000EeBKAA0'; //Patch VAR - CDW
    if(prematches.get('Company Name').contains('a3170000002x5FzAAI') || prematches.get('Email Domain').contains('a3170000002x5G0AAI'))      return 'a3070000000EeBFAA0'; //Patch GSI - I6
    if((prematches.get('Company Name').contains('a3170000002x5EcAAI') && opIn(t.custom2, new Set<String> { 'partner', 'ex - partner', 'partner prospect' })) || (prematches.get('Email Domain').contains('a3170000002x5EdAAI') && opIn(t.custom2, new Set<String> { 'partner', 'ex - partner', 'partner prospect' })))      return 'a3070000000EeAqAAK'; //Patch VAR - Optiv
    if(prematches.get('Company Name').contains('a314u00000NyNhVAAV') || prematches.get('Email Domain').contains('a314u00000NyNhaAAF'))      return 'a304u000002odUWAAY'; //Patch SP - BT
    if(prematches.get('Company Name').contains('a314u00000NdhzIAAR') || prematches.get('Email Domain').contains('a314u00000NdhzNAAR'))      return 'a304u000001GeLVAA0'; //Patch VAR - WWT
    if(prematches.get('Company Name').contains('a314u00000NdhyKAAR') || prematches.get('Email Domain').contains('a314u00000NdhyPAAR'))      return 'a304u000001GeLQAA0'; //Patch VAR - Presidio
    if(prematches.get('Company Name').contains('a310g00000NHylmAAD') || prematches.get('Email Domain').contains('a310g00000NHym1AAD'))      return 'a300g000002Rav7AAC'; //Patch Bus Dev Cloud Consulting - AWS
    if(prematches.get('Company Name').contains('a314u00000O7wz2AAB') || prematches.get('Email Domain').contains('a314u00000O7wz7AAB'))      return 'a304u000001wr6FAAQ'; //Patch SP - Tata Comm - Named Accounts
    if(prematches.get('Company Name').contains('a314u00000O7x0ZAAR') || prematches.get('Email Domain').contains('a314u00000O7x0eAAB'))      return 'a304u000001wr6KAAQ'; //Patch SP – AMER Emerging 1
    if(prematches.get('Company Name').contains('a3170000003gUDoAAM') || prematches.get('Email Domain').contains('a3170000003gUDtAAM'))      return 'a307000000045byAAA'; //Patch GSI - Accenture/Deloitte
    if(prematches.get('Company Name').contains('a314u00000NyLMdAAN') || prematches.get('Email Domain').contains('a314u00000NyLMiAAN'))      return 'a304u000002oHocAAE'; //Patch GSI - I6/A1
    if(prematches.get('Company Name').contains('a314u00000NyLMxAAN') || prematches.get('Email Domain').contains('a314u00000NyLN2AAN'))      return 'a304u000002oHomAAE'; //Patch GSI - I6/A3
    if((prematches.get('Company Name').contains('a314u00000NyLMnAAN') || prematches.get('Email Domain').contains('a314u00000NyLMsAAN')) && opIn(t.custom2, new Set<String> { 'partner', 'ex - partner', 'partner prospect' }))      return 'a304u000002oHohAAE'; //Patch GSI - I6/A2
    if(prematches.get('Company Name').contains('a314u00000NyLN7AAN') || prematches.get('Email Domain').contains('a314u00000NyLNCAA3'))      return 'a304u000002oHorAAE'; //Patch GSI - I6/A4
    return null;
  }
  //returns the matched patch
  global PatchDataModel.PatchInfo match(PatchDataModel.MatchTarget t)
  {
    Id result = null;
    prematches = prematchList(t);
    result = matchGroup1(t);
    if(result != null) return processResult(result);
    result = matchGroup2(t);
    if(result != null) return processResult(result);
    result = matchGroup3(t);
    if(result != null) return processResult(result);
    result = matchGroup4(t);
    if(result != null) return processResult(result);
    result = matchGroup5(t);
    if(result != null) return processResult(result);
    result = matchGroup6(t);
    if(result != null) return processResult(result);
    return null;
  }
}