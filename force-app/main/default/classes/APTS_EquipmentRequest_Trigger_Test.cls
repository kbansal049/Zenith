/*************************************************************************************************************************
 @Name: APTS_EquipmentRequest_Trigger_Test
 @Author: Anay Bhande
 @Created Date: 15/12/2016
 @Descripton: Test Class for APTS_EquipmentRequest_Trigger
 @Used By: 
*************************************************************************************************************************/
@isTest
public class APTS_EquipmentRequest_Trigger_Test {
    public static testMethod void testMyController() {
        Id caviumcardER = Schema.SObjectType.Equipment_Request__c.getRecordTypeInfosByName().get('Cavium Card').getRecordTypeId();
        Test.startTest();
       
        Account account = new Account(Name = 'Test Account');
        insert account;
        Id accountId = account.Id;
        
        Campaign camp = new Campaign();
        camp.Name = 'Deal Registration';
        camp.EndDate = system.today() + 30;
        camp.IsActive = true;
        insert camp;
        ZscalerSetting__c zs = new ZscalerSetting__c();
        zs.Name = 'DealRegCampaign';
        zs.Value__c = ''+camp.Id;
        insert zs;

        ZscalerSetting__c zs1 = new ZscalerSetting__c();
        zs1.Name = 'DealRegCaseReviewOwnerId';
        zs1.Value__c = ''+userInfo.getuserId();
        insert zs1;
        
        list<Deal_Reg__c> dealRegInsertList = new list<Deal_Reg__c>();

        Deal_Reg__c deal = new Deal_Reg__c();
        deal.End_Customer_Contact_Name__c = 'Test';
        deal.End_Customer_Contact_Last_Name__c= 'Test';
        deal.End_Customer_Country__c = 'US';
        deal.End_Customer_Domain__c = 'abc.com';
        deal.End_Customer_Email__c  = 'Test@abc.com';
        deal.End_Customer_Name__c = 'ABC Inc';
        deal.End_Customer_Phone__c = '123456789';
        deal.End_Customer_State__c = 'US';
        deal.DS_Review_Status__c = 'Pending Review';
        deal.Estimated_Amount__c = 1234567;
        deal.Expected_Close_Date__c = system.today() + 30;
        deal.Market_Segment__c = 'SMB';
        deal.Number_of_Users__c = 1234567;
        deal.Partner_Company_Name__c = 'Test partner';
        deal.Partner_Contact_Email__c = 'Test@partner.com';
        deal.Partner_Contact_Name__c = 'Test';
        deal.Partner_Contact_Last_Name__c  = 'Partner';
        deal.Partner_Country__c  = 'US';
        deal.Partner_Domain__c  = 'partner.com';
        deal.Partner_Account__c = accountId;
        deal.Source__c = 'Deal Reg';
        deal.Status__c = 'Submitted';
        insert deal;
        
        Opportunity opportunity = new Opportunity(Name = 'Test Opportunity', CloseDate = Date.today() + 30, StageName = Label.Stage_1_Alignment /*'1 - Qualified and Budgeted'*/, Type = 'New Business', ZIA_Use_Case__c = 'SD-WAN');
        insert opportunity;
        Equipment_Request__c EquiReq=new Equipment_Request__c(Opportunity__c=Opportunity.Id, Localized_content__c=true, REcordtypeId = caviumcardER);
        insert EquiReq;
        EquiReq.Approval_Status__c='Approved';
        EquiReq.Federal_Deal_Approved_EQ__c = true;
        update EquiReq;
        EquiReq.Federal_Deal_Approved_EQ__c = false;
        //EquiReq.Opportunity__c = null;
        Equireq.Deal_Registration__c = deal.Id;
        update EquiReq;
        Test.stopTest();
    }
    public static testMethod void testMyController1() {
        Id caviumcardER = Schema.SObjectType.Equipment_Request__c.getRecordTypeInfosByName().get('Professional Services').getRecordTypeId();
        Test.startTest();
       
        Account account = new Account(Name = 'Test Account');
        insert account;
        Id accountId = account.Id;
        
        Campaign camp = new Campaign();
        camp.Name = 'Deal Registration';
        camp.EndDate = system.today() + 30;
        camp.IsActive = true;
        insert camp;
        ZscalerSetting__c zs = new ZscalerSetting__c();
        zs.Name = 'DealRegCampaign';
        zs.Value__c = ''+camp.Id;
        insert zs;

        ZscalerSetting__c zs1 = new ZscalerSetting__c();
        zs1.Name = 'DealRegCaseReviewOwnerId';
        zs1.Value__c = ''+userInfo.getuserId();
        insert zs1;
        
        list<Deal_Reg__c> dealRegInsertList = new list<Deal_Reg__c>();

        Deal_Reg__c deal = new Deal_Reg__c();
        deal.End_Customer_Contact_Name__c = 'Test';
        deal.End_Customer_Contact_Last_Name__c= 'Test';
        deal.End_Customer_Country__c = 'US';
        deal.End_Customer_Domain__c = 'abc.com';
        deal.End_Customer_Email__c  = 'Test@abc.com';
        deal.End_Customer_Name__c = 'ABC Inc';
        deal.End_Customer_Phone__c = '123456789';
        deal.End_Customer_State__c = 'US';
        deal.DS_Review_Status__c = 'Pending Review';
        deal.Estimated_Amount__c = 1234567;
        deal.Expected_Close_Date__c = system.today() + 30;
        deal.Market_Segment__c = 'SMB';
        deal.Number_of_Users__c = 1234567;
        deal.Partner_Company_Name__c = 'Test partner';
        deal.Partner_Contact_Email__c = 'Test@partner.com';
        deal.Partner_Contact_Name__c = 'Test';
        deal.Partner_Contact_Last_Name__c  = 'Partner';
        deal.Partner_Country__c  = 'US';
        deal.Partner_Domain__c  = 'partner.com';
        deal.Partner_Account__c = accountId;
        deal.Source__c = 'Deal Reg';
        deal.Status__c = 'Submitted';
        insert deal;
        
        Opportunity opportunity = new Opportunity(Name = 'Test Opportunity', CloseDate = Date.today() + 30, StageName = Label.Stage_1_Alignment /*'1 - Qualified and Budgeted'*/, Type = 'New Business', ZIA_Use_Case__c = 'SD-WAN');
        insert opportunity;
        Equipment_Request__c EquiReq=new Equipment_Request__c(Opportunity__c=Opportunity.Id, Localized_content__c=true, REcordtypeId = caviumcardER);
        insert EquiReq;
        EquiReq.Approval_Status__c='Approved';
        EquiReq.Federal_Deal_Approved_EQ__c = true;
        update EquiReq;
        EquiReq.Federal_Deal_Approved_EQ__c = false;
        //EquiReq.Opportunity__c = null;
        Equireq.Deal_Registration__c = deal.Id;
        update EquiReq;
        Test.stopTest();
    }
	
	//CR# 969 Added by Varun - Start
    public static testMethod void testPreSkuER() {
        Id preSkuER = Schema.SObjectType.Equipment_Request__c.getRecordTypeInfosByDeveloperName().get('Restricted_SKUs').getRecordTypeId();
        Test.startTest();
        
        Account account = new Account(Name = 'Test Account');
        insert account;
        Id accountId = account.Id;      
        
        Opportunity opportunity = new Opportunity(Name = 'Test Opportunity', CloseDate = Date.today() + 30, StageName = Label.Stage_1_Alignment /*'1 - Qualified and Budgeted'*/, Type = 'New Business', ZIA_Use_Case__c = 'SD-WAN');
        insert opportunity;
        Equipment_Request__c EquiReq=new Equipment_Request__c(Opportunity__c=Opportunity.Id, Localized_content__c=true, REcordtypeId = preSkuER, Name='PRE-SKU ER',Equipment_Type__c='ZPA for Internet Traffic');
        insert EquiReq;
        EquiReq.Approval_Status__c='Approved';
        update EquiReq;
        Equipment_Request__c EquiReq2=new Equipment_Request__c(Opportunity__c=Opportunity.Id, Localized_content__c=true, REcordtypeId = preSkuER, Name='PRE-SKU ER Request',Equipment_Type__c='ZPA Remote PRE');
        insert EquiReq2;
        EquiReq2.Approval_Status__c='Approved';
        update EquiReq2;
        Test.stopTest();
    }	//CR# 969 Added by Varun - Start
}