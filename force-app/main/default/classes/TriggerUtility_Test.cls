@isTest
public class TriggerUtility_Test {
    
    @isTest
    static void testmethod1(){//A to F
        
        TriggerUtility.accContactWhiteSpaceUpdateExecuted();
        TriggerUtility.accContactWhiteSpaceUpdateReset();
        
        TriggerUtility.AccountWorkflowOptimizationmethodExecuted();
        TriggerUtility.AccountWorkflowOptimizationmethodsetfalse();
        TriggerUtility.AccountWorkflowOptimizationmethodsettrue();
        
        TriggerUtility.accSalesTeamExecuted();
        TriggerUtility.accSalesTeamReset();
        
        
        TriggerUtility.accTerritoryPatchExecuted();
        TriggerUtility.accterritorypatchReset();
        
        TriggerUtility.AcctoActivityTerritoryExecuted();
        TriggerUtility.AcctoActivityTerritoryReset();
        
        TriggerUtility.accToContactOwnerExecuted();
        TriggerUtility.accContactWhiteSpaceUpdateReset();
        
        TriggerUtility.ActivityleadterritoryEventinsertExecuted();
        TriggerUtility.ActivityleadterritoryEventupdateExecuted();
        TriggerUtility.ActivityleadterritoryinsertExecuted();
        TriggerUtility.ActivityleadterritoryupdateExecuted();
        
        TriggerUtility.architectureHistoryExecuted();
        TriggerUtility.architectureHistoryReset();
        
        TriggerUtility.AssignPendingCasestoTAMsExecuted();
        TriggerUtility.AssignPendingCasestoTAMsReset();
        
        
        TriggerUtility.AutocreateZCloudIDcontactUpdateExecuted();
        TriggerUtility.AutocreateZCloudIDcontactUpdatesetfalse();
        TriggerUtility.AutocreateZCloudIDcontactUpdatesettrue();
        
        
        TriggerUtility.beforeinsertexecutedonVCE();
        TriggerUtility.beforeinsertexecutedonVCEReset();
        
        TriggerUtility.beforeUpdateSplitExecuted();
        TriggerUtility.beforeUpdateSplitReset();
        
        TriggerUtility.BRAttachmentValidationExecuted();
        TriggerUtility.BRAttachmentValidationReset();
        
        TriggerUtility.CampMemActivityExecuted();
        TriggerUtility.CampMemActivityReset();
        
        TriggerUtility.captureCustomerNextStepsHistoryExecuted();
        TriggerUtility.captureCustomerNextStepsHistoryReset();
        
        TriggerUtility.CaseAfterInsertExecuted();
        TriggerUtility.CaseAfterInsertReset();
        
        TriggerUtility.CaseAfterUpdateExecuted();
        TriggerUtility.CaseAfterUpdateReset();
        
        
        TriggerUtility.CaseBeforeInsertExecuted();
        TriggerUtility.CaseBeforeInsertReset();
        
        TriggerUtility.CaseBeforeUpdateExecuted();
        TriggerUtility.CaseBeforeUpdateReset();
        
        TriggerUtility.CaseCCtoTeamExecuted();
        TriggerUtility.CaseCCtoTeamReset();
        
        TriggerUtility.CaseCommentAfterInsertExecuted();
        TriggerUtility.CaseCommentAfterInsertReset();
        
        TriggerUtility.CaseCommentBeforeInsertExecuted();
        TriggerUtility.CaseCommentBeforeInsertReset();
        
        TriggerUtility.caseCreationForLeadTerrirtoryExecuted();
        TriggerUtility.caseCreationForLeadTerrirtoryReset();
        
        TriggerUtility.CaseCreationInsertPRExecuted();
        TriggerUtility.CaseCreationInsertPRReset();
        
        TriggerUtility.CaseCreationUpdatePRExecuted();
        TriggerUtility.CaseCreationUpdatePRReset();
        
        TriggerUtility.CaseDesctoCommentExecuted();
        TriggerUtility.CaseDesctoCommentReset();
        
        TriggerUtility.CaseEntitlementAssigned();
        TriggerUtility.CaseEntitlementReset();
        
        TriggerUtility.CaseEscalationHistoryExecuted();
        TriggerUtility.CaseEscalationHistoryReset();
        
        TriggerUtility.CaseEscalationNotesExecuted();
        TriggerUtility.CaseEscalationNotesReset();
        
        TriggerUtility.CaseSkillAssignmentExecuted();
        TriggerUtility.CaseSkillAssignmentReset();
        
        TriggerUtility.CaseStatusHistoryExecuted();
        TriggerUtility.CaseStatusHistoryReset();
        
        TriggerUtility.CDLAfterInsertExecuted();
        TriggerUtility.CDLAfterInsertReset();
        
        TriggerUtility.CloseMilestonesonCaseCloseExecuted();
        TriggerUtility.CloseMilestonesonCaseCloseReset();
        
        TriggerUtility.contactOwnerShipExecuted();
        TriggerUtility.contactOwnerShipReset();
        
        TriggerUtility.contactPatchManagerExecuted();
        TriggerUtility.contactPatchManagerReset();
        
        TriggerUtility.contractDetailAccountDeploymentExecuted();
        TriggerUtility.contractDetailAccountDeploymentReset();
        
        TriggerUtility.conWhiteSpaceUpdateExecuted();
        TriggerUtility.conWhiteSpaceUpdateReset();
        
        TriggerUtility.CosellBeforeInsertExecuted();
        TriggerUtility.CosellBeforeInsertReset();
        
        TriggerUtility.CreateAccExtensionExecuted();
        TriggerUtility.CreateAccExtensionReset();
        
        TriggerUtility.createInternalAttendeesForMeetingEventExecuted();
        TriggerUtility.createInternalAttendeesForMeetingEventReset();
        
        
        TriggerUtility.CustomerNotePublicExecuted();
        TriggerUtility.CustomerNotePublicReset();
        
        TriggerUtility.CustomerSuccessUpdatemethodexecuted();
        TriggerUtility.CustomerSuccessUpdatemethodsetfalse();
        TriggerUtility.CustomerSuccessUpdatemethodsettrue();
        
        TriggerUtility.dealRegAfterInsertExecuted();
        TriggerUtility.dealRegAfterInsertReset();
        
        TriggerUtility.dealRegAfterUpdateExecuted();
        TriggerUtility.dealRegAfterUpdateReset();
        
        TriggerUtility.dealRegBeforeInsertExecuted();
        TriggerUtility.dealRegBeforeInsertReset();
        
        TriggerUtility.dealRegBeforeUpdateExecuted();
        TriggerUtility.dealRegBeforeUpdateReset();
        
        TriggerUtility.DRCopyPriorStatusonExpExtensionExecuted();
        TriggerUtility.DRCopyPriorStatusonExpExtensionReset();
        
        TriggerUtility.DRFinalReviewExecuted();
        TriggerUtility.DRFinalReviewReset();
        
        TriggerUtility.DRMeetingTypeReset();
        TriggerUtility.DRMeetingTypeUpdated();
        
        TriggerUtility.DRPendingNBMConvertedExecuted();
        TriggerUtility.DRPendingNBMConvertedReset();
        
        TriggerUtility.DRPriorStatusCaptureExecuted();
        TriggerUtility.DRPriorStatusCaptureReset(); 
        
        TriggerUtility.DRRejectApprovalExecuted();
        TriggerUtility.DRRejectApprovalReset();
        
        TriggerUtility.DRRemovalfromOppExecuted();
        TriggerUtility.DRRemovalfromOppReset();
        
        TriggerUtility.DSATCaseCreationExecuted();
        TriggerUtility.DSATCaseCreationReset();
        
        TriggerUtility.EmailCDLtoCaseEDLExecuted();
        TriggerUtility.EmailCDLtoCaseEDLReset();
        
        TriggerUtility.EmailMessageAfterInsertExecuted();
        TriggerUtility.EmailMessageAfterInsertReset();
        
        TriggerUtility.EmailMessageFRTExecuted();
        TriggerUtility.EmailMessageFRTReset();
        
        TriggerUtility.EmailMessagetoCaseCommentExecuted();
        TriggerUtility.EmailMessagetoCaseCommentReset();
        
        TriggerUtility.EntitlementUpdateExecuted();
        TriggerUtility.EntitlementUpdateReset();
        
        TriggerUtility.ERNotificationExecuted();
        TriggerUtility.ERNotificationReset();    
        
        TriggerUtility.EventAfterInsertExecuted();
        TriggerUtility.EventAfterInsertReset();
        
        TriggerUtility.EventAfterUpdateExecuted();
        TriggerUtility.EventAfterUpdateReset();
        
        TriggerUtility.FeedCommentAfterTriggerExecuted();
        TriggerUtility.FeedCommentAfterTriggerReset();
        
        TriggerUtility.FeedItemAfterTriggerExecuted();
        TriggerUtility.FeedItemAfterTriggerReset();
        
        TriggerUtility.FeedItemBeforeTriggerExecuted();
        TriggerUtility.FeedItemBeforeTriggerReset();
        
        TriggerUtility.FeedItemInternalPostExecuted();
        TriggerUtility.FeedItemInternalPostReset();
        
        TriggerUtility.FeedPartnerContactExecuted();
        TriggerUtility.FeedPartnerContactReset();
        
        TriggerUtility.FeedPartnerCosellExecuted();
        TriggerUtility.FeedPartnerCosellReset();
        
        TriggerUtility.FeedPartnerDealRegExecuted();
        
        TriggerUtility.FRTandCustomerNoteExecuted();
        TriggerUtility.FRTandCustomerNoteReset();
        
        TriggerUtility.fsAccountOwnerIdUpdateExecuted();
        TriggerUtility.fsAccountOwnerIdUpdateReset();
        
        
    }
    
    
    @isTest
    static void testmethod2(){//G to
                
        TriggerUtility.GetFeedbackExecuted();
        TriggerUtility.GetFeedbackReset();
        
        TriggerUtility.getUsersEmail(UserInfo.getUserId());
        
        TriggerUtility.intLogtriggerPRLogicExecuted();
        TriggerUtility.intLogtriggerPRLogicReset();
        
        TriggerUtility.isAccContactWhiteSpaceUpdateExecuted();
        
        TriggerUtility.isAccountExtensionHistoryExecuted();
        TriggerUtility.isAccSalesTeamExecuted();
        TriggerUtility.isAccTerritoryPatchexecuted();
        TriggerUtility.isAcctoActivityTerritoryExecuted();
        TriggerUtility.isaccToContactOwnerExecuted();
        
        TriggerUtility.isActivityleadterritoryEventinsertExecuted();
        TriggerUtility.isActivityleadterritoryEventinsertReset();
        
        TriggerUtility.isActivityleadterritoryEventupdateExecuted();
        TriggerUtility.isActivityleadterritoryEventupdateReset();
        
        TriggerUtility.isActivityleadterritoryinsertExecuted();
        TriggerUtility.isActivityleadterritoryinsertReset();
        
        TriggerUtility.isActivityleadterritoryupdateExecuted();
        TriggerUtility.isActivityleadterritoryupdateReset();
        
        TriggerUtility.isarchitectureHistoryExecuted();
        TriggerUtility.isAssignPendingCasestoTAMsExecuted();
        
        TriggerUtility.isbeforeinsertexecutedonVCE();
        TriggerUtility.isbeforeUpdateSplitExecuted();
        
        TriggerUtility.isBRAttachmentValidationExecuted();
        
        TriggerUtility.isCampMemActivityExecuted();
        
        TriggerUtility.isCaptureCustomerNextStepsHistoryExecuted();
        
        TriggerUtility.isCaseAfterInsertExecuted();
        
        TriggerUtility.isCaseAfterUpdateExecuted();
        
        TriggerUtility.isCaseBeforeInsertExecuted();
        
        TriggerUtility.isCaseBeforeUpdateExecuted();
        
        TriggerUtility.isCaseCCtoTeamExecuted();
        
        TriggerUtility.isCaseCommentAfterInsertExecuted();
        
        TriggerUtility.isCaseCommentBeforeInsertExecuted();
        
        TriggerUtility.isCaseCreationForLeadTerrirtory();
        
        TriggerUtility.isCaseCreationInsertPRExecuted();
        
        TriggerUtility.isCaseCreationUpdatePRExecuted();
        
        TriggerUtility.isCaseDesctoCommentExecuted();
        
        TriggerUtility.isCaseEntitlementAssigned();
        
        TriggerUtility.isCaseEscalationHistoryExecuted();
        
        TriggerUtility.isCaseEscalationNotesExecuted();
        
        TriggerUtility.isCaseSkillAssignmentExecuted();
        
        TriggerUtility.isCaseStatusHistoryExecuted();
        
        TriggerUtility.isCDLAfterInsertExecuted();
        
        TriggerUtility.isCloseMilestonesonCaseCloseExecuted();
        
        TriggerUtility.iscontactOwnerShipExecuted();
        
        TriggerUtility.isContactPatchManagerExecuted();
        
        TriggerUtility.isContractDetailAccountDeploymentExecuted();
        
        TriggerUtility.isconWhiteSpaceUpdateExecuted();
        
        TriggerUtility.isCosellBeforeInsertExecuted();
        
        TriggerUtility.isCosellBeforeUpdateExecuted();
        
        TriggerUtility.isCreateAccExtensionExecuted();
        
        TriggerUtility.iscreateCSMProjectFromCompletedExecuted();
        
        TriggerUtility.isCreateInternalAttendeesForMeetingEventExecuted();
        
        
        TriggerUtility.IsCSMmanagerEmailCodeexecuted();
        TriggerUtility.IsCSMmanagerEmailCodeexecutedsetfalse();
        TriggerUtility.IsCSMmanagerEmailCodeexecutedsettrue();
        
        TriggerUtility.isCustomerNotePublicExecuted();
        
        TriggerUtility.isDealRegAfterInsertExecuted();
        TriggerUtility.isDealRegAfterUpdateExecuted();
        TriggerUtility.isDealRegBeforeInsertExecuted();
        TriggerUtility.isDealRegBeforeUpdateExecuted();
        
        TriggerUtility.isDRCopyPriorStatusonExpExtensionExecuted();
        TriggerUtility.isDRFinalReviewExecuted();
        TriggerUtility.isDRPendingNBMConvertedExecuted();
        TriggerUtility.isDRPriorStatusCaptureExecuted();
        TriggerUtility.isDRRejectApprovalExecuted();
        TriggerUtility.isDRRemovalfromOppExecuted();
        
        TriggerUtility.isDSATCaseCreationExecuted();
        
        TriggerUtility.isEmailCDLtoCaseEDLExecuted();
        
        TriggerUtility.isEmailMessageAfterInsertExecuted();
        TriggerUtility.isEmailMessageFRTExecuted();
        TriggerUtility.isEmailMessagetoCaseCommentExecuted();
        
        TriggerUtility.isEntitlementUpdateExecuted();
        
        TriggerUtility.isERNotificationExecuted();
        
        TriggerUtility.isEventAfterInsertExecuted();
        TriggerUtility.isEventAfterUpdateExecuted();
        
        TriggerUtility.isFeedCommentAfterTriggerExecuted();
        
        TriggerUtility.isFeedItemAfterTriggerExecuted();
        TriggerUtility.isFeedItemBeforeTriggerExecuted();
        
        TriggerUtility.isFeedItemInternalPostExecuted();
       
        TriggerUtility.isFeedPartnerContactExecuted();
        TriggerUtility.isFeedPartnerCosellExecuted();
        TriggerUtility.isFeedPartnerDealRegExecuted();
        TriggerUtility.isFeedPartnerDealRegReset();
        
        TriggerUtility.isFRTandCustomerNoteExecuted();
        
        TriggerUtility.isFsAccountOwnerIdUpdateExecuted();
        
        TriggerUtility.isGenerateYearWiseSplitExecuted();
        TriggerUtility.isGetFeedbackExecuted();
        
        TriggerUtility.isintLogtriggerPRLogicExecuted();
        
        TriggerUtility.ismanageZscalerAttendeeExecuted();
        
        TriggerUtility.isManualSLAExecuted();
        
        TriggerUtility.isOppCaseCreationExecuted();
        
        TriggerUtility.isOpportunityAccountsScreeningExecuted();
        TriggerUtility.isOpportunityCreatorRoleHandler();
        TriggerUtility.isopportunityfieldupdate();
        TriggerUtility.isopportunityfieldupdateExecuted();
        TriggerUtility.isopportunityfieldupdateReset();
        TriggerUtility.isOpportunityOwnershipChangeExecuted();
        TriggerUtility.isOpportunityPartnerAddition();
        TriggerUtility.isOpportunitySplitsAfterUpdateExecuted();
        TriggerUtility.isOpportunityUpdatesContactHandler();
        
        TriggerUtility.isOppPatchManagerAfterInsertExecuted();
        TriggerUtility.isOppPatchManagerAfterUpdateExecuted();
        
        TriggerUtility.isOppPRProductionStatusUpdateExecuted();
        
        TriggerUtility.isOppSpliSalesTeamExecuted();
        TriggerUtility.isOpptySplitTriggerFCexecuted();
        TriggerUtility.isOpptyTriggerFCexecuted();
        
        TriggerUtility.isPatchRealigning();
        
        TriggerUtility.isPRafterInsertExecuted();
        TriggerUtility.isPRafterUpdateExecuted();
        TriggerUtility.isProspectEntitlementExecuted();
        TriggerUtility.isProspectUpdateExecuted();
        
        TriggerUtility.isRequestDecommissionPrExecuted();
        TriggerUtility.isRevisitOpportunitySplitsSalesTerritoryExecuted();
        TriggerUtility.isrevokePendingQuoteApprovalExecuted();
        
        TriggerUtility.isSCIDealRegUpdateExecuted();
        TriggerUtility.isSCIOppUpdateExecuted();
        
        TriggerUtility.isSkipAccTriggerExecuted();
        TriggerUtility.isSkipCaseCommentTriggerExecuted();
        TriggerUtility.isskipCaseEscalationExecuted();
        TriggerUtility.isSkipCaseTriggerExecuted();
        
        TriggerUtility.isSkipConDetailTriggerExecuted();
        TriggerUtility.isSkipContactTriggerExecuted();
        TriggerUtility.isSkipContentDocLinkTriggerExecuted();
        
        TriggerUtility.isskipCopyProductDetailsExecuted();
        
        TriggerUtility.isSkipCosellStatusLMExecuted();
        TriggerUtility.isSkipCosellTriggerExecuted();
        
        TriggerUtility.isSkipEmailMessageTriggerExecured();
        TriggerUtility.isskipentireproposaltriggerExecuted();
        TriggerUtility.isSkipEventTriggerExecuted();
        TriggerUtility.isSkipFeedCommentTriggerExecuted();
        TriggerUtility.isSkipFeedItemTriggerExecuted();
        TriggerUtility.isSkipLineItemTriggerExecuted();
        
        TriggerUtility.isskipOppAfterInsertTriggerExecuted();
        TriggerUtility.isskipOppAfterUpdateTriggerExecuted();
        TriggerUtility.isskipOppBeforeInsertTriggerExecuted();
        TriggerUtility.isskipOppBeforeUpdateTriggerExecuted();
        TriggerUtility.isSkipOppTriggerExecuted();
        
        TriggerUtility.isSkipQuoteNeedsRepriceExecuted();
        
        TriggerUtility.isSkipUserPresenceTriggerExecuted();
        TriggerUtility.isSkipUserTriggerExecuted();
        
       
        TriggerUtility.isupdateRFPRequest_lightExecuted();
        TriggerUtility.isupdateRFPRequest_classicExecuted();
    }
    
    @isTest
    static void testmethod3(){
        TriggerUtility.manageZscalerAttendeeExecuted();
        TriggerUtility.manageZscalerAttendeeReset();
        
        TriggerUtility.ManualSLAExecuted();
        TriggerUtility.ManualSLAReset();
        
        TriggerUtility.oppCaseCreationExecuted();
        TriggerUtility.oppCaseCreationReset();
        
        TriggerUtility.opportunityAccountsScreeningExecuted();
        TriggerUtility.opportunityAccountsScreeningReset();
        
        TriggerUtility.opportunityOwnershipChangeExecuted();
        TriggerUtility.OpportunityOwnershipChangeReset();
        
        TriggerUtility.OpportunityPartnerAdditionExecuted();
        TriggerUtility.OpportunityPartnerAdditionReset();
        
        TriggerUtility.opportunitySplitsAfterUpdateExecuted();
        TriggerUtility.opportunitySplitsAfterUpdateReset();
        
        TriggerUtility.oppPatchManagerAfterInsertExecuted();
        TriggerUtility.oppPatchManagerAfterInsertReset();
        
        TriggerUtility.oppPatchManagerAfterUpdateExecuted();
        TriggerUtility.oppPatchManagerAfterUpdateReset();
        
        TriggerUtility.isOppoGotoSevenStageExecuted();
        TriggerUtility.oppoGotoSevenStageExecutedSetTrue();
        
        TriggerUtility.isSkipOpportunityTriggerExecuted();
        TriggerUtility.SkipOpportunityTriggerExecutedSetTrue();
        TriggerUtility.oppPRProductionStatusUpdateExecuted();
        TriggerUtility.oppPRProductionStatusUpdateReset();
        
        TriggerUtility.oppSpliSalesTeamExecuted();
        TriggerUtility.oppSpliSalesTeamReset();
        
        TriggerUtility.OpptyTriggerFCexecuted();
        TriggerUtility.OpptyTriggerFCReset();
        
        TriggerUtility.overrideACVValuesResetExecuted();
        
        TriggerUtility.overrideACVValuesResetFromOpptyExecuted();
        TriggerUtility.overrideACVValuesResetFromOpptyReset();
        
        TriggerUtility.PRafterInsertExecuted();
        TriggerUtility.PRafterInsertReset();
        
        TriggerUtility.ProspectEntitlementExecuted();
        TriggerUtility.ProspectEntitlementReset();
        
        TriggerUtility.prospectTypeUpdExecuted();
        TriggerUtility.prospectTypeUpdReset();
        
        TriggerUtility.realignPatch();
        TriggerUtility.realignPatchReset();
        
        TriggerUtility.requestDecommissionPrExecuted();
        TriggerUtility.requestDecommissionPrReset();
        
        TriggerUtility.revisitOpportunitySplitsSalesTerritoryExecuted();
        TriggerUtility.revisitOpportunitySplitsSalesTerritoryReset();
        
        TriggerUtility.revokePendingQuoteApprovalExecuted();
        TriggerUtility.revokePendingQuoteApprovalReset();
        
        TriggerUtility.SCIDealRegUpdateExecuted();
        TriggerUtility.SCIDealRegUpdateReset();
        
        TriggerUtility.SCIOppUpdateExecuted();
        TriggerUtility.SCIOppUpdateReset();
        
        TriggerUtility.ScreenAccountsWithAmberRoadExecuted();
        TriggerUtility.ScreenAccountsWithAmberRoadExecutedsetfalse();
        TriggerUtility.ScreenAccountsWithAmberRoadExecutedsettrue();
        
        TriggerUtility.SkipAccTriggerExecuted();
        TriggerUtility.SkipAccTriggerReset();
        
        TriggerUtility.SkipCaseCommentTriggerExecuted();
        TriggerUtility.SkipCaseCommentTriggerReset();
        
        TriggerUtility.skipCaseEscalationExecuted();
        TriggerUtility.skipCaseEscalationReset();
        
        TriggerUtility.SkipCaseTriggerExecuted();
        TriggerUtility.SkipCaseTriggerReset();
        
        TriggerUtility.SkipConDetailTriggerExecuted();
        TriggerUtility.SkipConDetailTriggerReset();
        
        TriggerUtility.SkipContentDocLinkTriggerExecuted();
        TriggerUtility.SkipContentDocLinkTriggerReset();
        
        TriggerUtility.skipCopyProductDetailsExecuted();
        TriggerUtility.skipCopyProductDetailsReset();
        
        TriggerUtility.SkipCosellStatusLMExecuted();
        TriggerUtility.SkipCosellStatusLMReset();
        
        TriggerUtility.SkipCosellTriggerExecuted();
        TriggerUtility.SkipCosellTriggerReset();
        
        TriggerUtility.SkipEmailMessageTriggerExecured();
        TriggerUtility.SkipEmailMessageTriggerReset();
        
        TriggerUtility.skipentireproposaltriggerExecuted();
        TriggerUtility.skipentireproposaltriggerReset();
        
        TriggerUtility.SkipEventTriggerExecuted();
        TriggerUtility.SkipEventTriggerReset();
        
        TriggerUtility.SkipFeedCommentTriggerExecuted();
        TriggerUtility.SkipFeedCommentTriggerReset();
        
        TriggerUtility.SkipLineItemTriggerExecuted();
        TriggerUtility.SkipLineItemTriggerReset();
        
        TriggerUtility.skipOppAfterInsertTriggerExecuted();
        TriggerUtility.skipOppAfterInsertTriggerReset();
        
        TriggerUtility.skipOppAfterUpdateTriggerExecuted();
        TriggerUtility.skipOppAfterUpdateTriggerReset();
        
        TriggerUtility.skipOppBeforeInsertTriggerExecuted();
        TriggerUtility.skipOppBeforeInsertTriggerReset();
        
        TriggerUtility.skipOppBeforeUpdateTriggerExecuted();
        TriggerUtility.skipOppBeforeUpdateTriggerReset();
        
        TriggerUtility.SkipOppTriggerExecuted();
        TriggerUtility.SkipOppTriggerReset();
        
        TriggerUtility.SkipUserPresenceTriggerExecuted();
        TriggerUtility.SkipUserPresenceTriggerReset();
        
        TriggerUtility.SkipUserTriggerExecuted();
        TriggerUtility.SkipUserTriggerReset();
        
        TriggerUtility.skipOpportunityTrigger();
        
        TriggerUtility.TAMAgentWorkExecuted();
        TriggerUtility.TAMAgentWorkReset();
        
        TriggerUtility.TechpartnerupdateExecuted();
        TriggerUtility.TechpartnerupdateReset();
        
        TriggerUtility.udpateSCIforEngagementExecuted();
        TriggerUtility.udpateSCIforEngagementReset();
        
        TriggerUtility.updateAccountExtensionHistoryExecuted();
        
        TriggerUtility.UpdateAccountExtensionmethodExecuted();
        TriggerUtility.UpdateAccountExtensionmethodsetfalse();
        TriggerUtility.UpdateAccountExtensionmethodsettrue();
        
        TriggerUtility.updateAccountForApprovedPZENExecuted();
        TriggerUtility.updateAccountForApprovedPZENReset();
        
        TriggerUtility.updateContactLeadStageExecuted();
        TriggerUtility.updateContactLeadStageReset();
        
        TriggerUtility.updateContactRoleCountExecuted();
        TriggerUtility.updateContactRoleCountReset();
        
        TriggerUtility.updateContractEndDateExecuted();
        TriggerUtility.updateContractEndDateReset();
        
        TriggerUtility.updateDasPackageNameInOpptyExecuted();
        TriggerUtility.updateDasPackageNameInOpptyReset();
        
        TriggerUtility.UpdateDetailsonMasterCaseExecuted();
        TriggerUtility.UpdateDetailsonMasterCaseReset();
        
        TriggerUtility.updatedQuoteExecuted();
        TriggerUtility.updatedQuoteReset();
        
        TriggerUtility.updateForecastCategoryExecuted();
        TriggerUtility.updateForecastCategoryReset();
        
        TriggerUtility.updateGeolocationForDatacenterExecuted();
        TriggerUtility.updateGeolocationForDatacenterReset();
        
        TriggerUtility.updateLatestIBConOppExecuted();
        TriggerUtility.updateLatestIBConOppReset();
        
        TriggerUtility.updateLeadContactForCampExecuted();
        TriggerUtility.updateLeadContactForCampReset();
        
        TriggerUtility.updateLeadNoOfEmployeesExecuted();
        TriggerUtility.updateLeadNoOfEmployeesReset();
        
        TriggerUtility.updateLeadSalesTeamEmailFieldsExecuted();
        TriggerUtility.updateLeadSalesTeamEmailFieldsReset();
        
        TriggerUtility.updateOppNextStepHistoryExecuted();
        TriggerUtility.updateOppNextStepHistoryReset();
        
        TriggerUtility.UpdateOppPartneronPrimaryChangeExecuted();
        TriggerUtility.UpdateOppPartneronPrimaryChangeReset();
        
        TriggerUtility.UpdateOriginalTAMexecuted();
        
        TriggerUtility.updatePartnerAccountForSCIExecuted();
        TriggerUtility.updatePartnerAccountForSCIReset();
        
        TriggerUtility.updateRFPRequest_lightExecuted();
        TriggerUtility.updateRFPRequest_lightReset();
        
        TriggerUtility.updateRFPRequest_classicExecuted();
        TriggerUtility.updateRFPRequest_classicReset();
        
        TriggerUtility.updateSEManagerEmailExecuted();
        TriggerUtility.updateSEManagerEmailReset();
        
        TriggerUtility.updateSENameFromAccountExecuted();
        TriggerUtility.updateSENameFromAccountReset();
        
        TriggerUtility.UpdateSEonCaseExecuted();
        TriggerUtility.UpdateSEonCaseReset();
        
        TriggerUtility.UpdateTAMemailExecuted();
        TriggerUtility.UpdateTAMemailReset();
        
        TriggerUtility.updateTechValHistoryExecuted();
        TriggerUtility.updateTechValHistoryReset();
        
        TriggerUtility.updateSkipTAMReassignmentOnChildCasesExecuted();
        TriggerUtility.updateSkipTAMReassignmentOnChildCasesTrue();
        TriggerUtility.updateSkipTAMReassignmentOnChildCasesFalse();
        TriggerUtility.booster();
        TriggerUtility2.booster();
        
        TriggerUtility.isexecuteUpdateParticipantsExecuted();
        TriggerUtility.executeUpdateParticipantsExecuted();
        TriggerUtility.executeUpdateParticipantsReset();

        TriggerUtility2.issetOppTechPartnerExecuted();
        TriggerUtility2.setOppTechPartnerExecuted();
        TriggerUtility2.setOppTechPartnerReset();
        TriggerUtility2.issetOppRelTechPartnerExecuted();
        TriggerUtility2.setOppRelTechPartnerExecuted();
        TriggerUtility2.setOppRelTechPartnerReset();
        TriggerUtility2.isOppBeforeInsertExecuted();
        TriggerUtility2.OppBeforeInsertExecuted();
        TriggerUtility2.OppBeforeInsertReset();
        TriggerUtility2.isOppBeforeUpdateExecuted();
        TriggerUtility2.OppBeforeUpdateExecuted();
        TriggerUtility2.OppBeforeUpdateReset();
        TriggerUtility2.isOppAfterInsertExecuted();
        TriggerUtility2.OppAfterInsertExecuted();
        TriggerUtility2.OppAfterInsertReset();
        TriggerUtility2.isOppAfterUpdateExecuted();
        TriggerUtility2.OppAfterUpdateExecuted();
        TriggerUtility2.OppAfterUpdateReset();
        TriggerUtility2.isUpdateEdgewiseOverlayTeamSharingExecuted();
        TriggerUtility2.UpdateEdgewiseOverlayTeamSharingExecuted();
        TriggerUtility2.UpdateEdgewiseOverlayTeamSharingReset();
        TriggerUtility2.iszscalerCloudIdTriggerExecuted();
        TriggerUtility2.UpdateZscalerCloudIdTriggerExecuted();
        TriggerUtility2.UpdateZscalerCloudIdTriggerReset();
        TriggerUtility2.iscontractExtensionEmailSentExecuted();
        TriggerUtility2.contractExtensionEmailSentExecuted();
        TriggerUtility2.contractExtensionEmailSentReset();
        TriggerUtility2.isupdateTAMMetingDateExecuted();
        TriggerUtility2.updateTAMMetingDateExecuted();
        TriggerUtility2.updateTAMMetingDateReset();
        TriggerUtility2.isSkipAttachmentTriggerExecuted();
        TriggerUtility2.SkipAttachmentTriggerExecuted();
        TriggerUtility2.SkipAttachmentTriggerReset();
         TriggerUtility2.setfocusPartnerSalesTeamUpdateExecuted();
        TriggerUtility2.reSetfocusPartnerSalesTeamUpdateExecuted();
        
        
    }
}